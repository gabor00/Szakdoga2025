
name: szakdoga2025
services:
  # Load Balancer
  traefik:
    image: traefik:v2.9
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--providers.file.watch=true"
      - "--entrypoints.web.address=:8000"
    container_name: szakdoga2025-traefik
    ports:
      - "80:80"     # Web entrypoint
      - "8080:8080" # Dashboard
    volumes:
      - //var/run/docker.sock:/var/run/docker.sock
      - ./traefik/dynamic:/etc/traefik/dynamic
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
    networks:
      - traefik-network
    labels:
      - "traefik.docker.network=szakdoga2025_traefik-network"  # A docker network ls által mutatott név
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.traefik.service=api@internal"

  # Blue Slot Services
  microservice1-blue:
    image: szakdoga2025-microservice1-blue:v0.1
    build:
      context: ../apps/m1
      dockerfile: Dockerfile
    container_name: szakdoga2025-microservice1-blue
    networks:
      - traefik-network
    ports: 
      - "8001:8000"
    environment:
      - SERVICE_VERSION=0.1.0
      - DEPLOYMENT_SLOT=blue
    labels:
      - "traefik.docker.network=szakdoga2025_traefik-network"  # A docker network ls által mutatott név
      - "traefik.enable=true"
      - "traefik.http.routers.microservice1-blue.rule=PathPrefix(`/api/service1`) && Headers(`X-Deployment-Slot`, `blue`)"
      - "traefik.http.services.microservice1-blue.loadbalancer.server.port=8000"

  microservice2-blue:
    image: szakdoga2025-microservice2-blue:v0.1
    build:
      context: ../apps/m2
      dockerfile: Dockerfile
    container_name: szakdoga2025-microservice2-blue
    networks:
      - traefik-network
    ports: 
      - "8002:8000"
    environment:
      - SERVICE_VERSION=0.1.0
      - DEPLOYMENT_SLOT=blue
    labels:
      - "traefik.docker.network=szakdoga2025_traefik-network"  # A docker network ls által mutatott név
      - "traefik.enable=true"
      - "traefik.http.routers.microservice2-blue.rule=PathPrefix(`/api/service2`) && Headers(`X-Deployment-Slot`, `blue`)"
      - "traefik.http.services.microservice2-blue.loadbalancer.server.port=8000"

  microservice3-blue:
    image: szakdoga2025-microservice3-blue:v0.1
    build:
      context: ../apps/m3
      dockerfile: Dockerfile
    container_name: szakdoga2025-microservice3-blue
    networks:
      - traefik-network
    ports: 
      - "8003:8000"
    environment:
      - SERVICE_VERSION=0.1.0
      - DEPLOYMENT_SLOT=blue
    labels:
      - "traefik.docker.network=szakdoga2025_traefik-network"  # A docker network ls által mutatott név
      - "traefik.enable=true"
      - "traefik.http.routers.microservice3-blue.rule=PathPrefix(`/api/service3`) && Headers(`X-Deployment-Slot`, `blue`)"
      - "traefik.http.services.microservice3-blue.loadbalancer.server.port=8000"

  # Green Slot Services
  microservice1-green:
    image: szakdoga2025-microservice1-green:v0.1
    build:
      context: ../apps/m1
      dockerfile: Dockerfile
    container_name: szakdoga2025-microservice1-green
    networks:
      - traefik-network
    ports: 
      - "8011:8000"
    environment:
      - SERVICE_VERSION=0.1.0
      - DEPLOYMENT_SLOT=green
    labels:
      - "traefik.docker.network=szakdoga2025_traefik-network"  # A docker network ls által mutatott név
      - "traefik.enable=true"
      - "traefik.http.routers.microservice1-green.rule=PathPrefix(`/api/service1`) && Headers(`X-Deployment-Slot`, `green`)"
      - "traefik.http.services.microservice1-green.loadbalancer.server.port=8000"

  microservice2-green:
    image: szakdoga2025-microservice2-green:v0.1
    build:
      context: ../apps/m2
      dockerfile: Dockerfile
    container_name: szakdoga2025-microservice2-green
    networks:
      - traefik-network
    ports: 
      - "8012:8000"
    environment:
      - SERVICE_VERSION=0.1.0
      - DEPLOYMENT_SLOT=green
    labels:
      - "traefik.docker.network=szakdoga2025_traefik-network"  # A docker network ls által mutatott név
      - "traefik.enable=true"
      - "traefik.http.routers.microservice2-green.rule=PathPrefix(`/api/service2`) && Headers(`X-Deployment-Slot`, `green`)"
      - "traefik.http.services.microservice2-green.loadbalancer.server.port=8000"

  microservice3-green:
    image: szakdoga2025-microservice3-green:v0.1
    build:
      context: ../apps/m3
      dockerfile: Dockerfile
    container_name: szakdoga2025-microservice3-green
    networks:
      - traefik-network
    ports: 
      - "8013:8000"
    environment:
      - SERVICE_VERSION=0.1.0
      - DEPLOYMENT_SLOT=green
    labels:
      - "traefik.docker.network=szakdoga2025_traefik-network"  # A docker network ls által mutatott név
      - "traefik.enable=true"
      - "traefik.http.routers.microservice3-green.rule=PathPrefix(`/api/service3`) && Headers(`X-Deployment-Slot`, `green`)"
      - "traefik.http.services.microservice3-green.loadbalancer.server.port=8000"

  # Deployment Engine
  deployment-engine:
    build:
      context: ../apps/deployment-engine
      dockerfile: Dockerfile
    container_name: szakdoga2025-deployment-engine
    networks:
      - traefik-network
    ports: 
      - "8100:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/dynamic:/etc/traefik/dynamic
      - ./:/app/repo
    labels:
      - "traefik.docker.network=szakdoga2025_traefik-network"  # A docker network ls által mutatott név
      - "traefik.enable=true"
      - "traefik.http.routers.deployment-engine.rule=PathPrefix(`/api/deployment-engine`)"
      - "traefik.http.middlewares.strip-deploy-prefix.stripprefix.prefixes=/api/deployment-engine"
      - "traefik.http.routers.deployment-engine.middlewares=strip-deploy-prefix"
      - "traefik.http.services.deployment-engine.loadbalancer.server.port=8000"

  # Dashboard
  dashboard:
    build:
      context: ../apps/dashboard
      dockerfile: Dockerfile
    container_name: szakdoga2025-dashboard
    restart: unless-stopped
    depends_on:
      - deployment-engine
      - microservice1-blue
      - microservice2-blue
      - microservice3-blue
      - microservice1-green
      - microservice2-green
      - microservice3-green
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost/api/deployment
    networks:
      - traefik-network
    ports: 
      - "8111:3000"
    labels:
      - "traefik.docker.network=szakdoga2025_traefik-network"  # A docker network ls által mutatott név
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=PathPrefix(`/`)"
      - "traefik.http.routers.dashboard.entrypoints=web"
      - "traefik.http.services.dashboard.loadbalancer.server.port=3000"
      - "traefik.http.routers.dashboard.priority=1" # Lower priority for catch-all route


networks:
  traefik-network:
    driver: bridge
